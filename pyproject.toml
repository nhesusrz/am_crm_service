[tool.poetry]
name = "am-crm-service"
version = "0.1.0"
package-mode = false
description = "AM-CRM service API for users and customers administration"
authors = ["Martin Pacheco <martin.ignacio.pacheco@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.112.1"
uvicorn = "^0.30.6"
sqlalchemy = "^2.0.32"
databases = "^0.9.0"
alembic = "^1.13.2"
pydantic-settings = "^2.4.0"
asyncpg = "^0.29.0"
greenlet = "^3.0.3"
passlib = "^1.7.4"
python-jose = "^3.3.0"
python-multipart = "^0.0.9"
aioboto3 = "^13.1.1"
httpx = "^0.27.2"
pytest = "^8.3.2"
pytest-asyncio = "^0.24.0"
pytest-mock = "^3.14.0"
fastapi-dependency = "^0.1.0"
mock-alchemy = "^0.2.6"
aiosqlite = "^0.20.0"
pytz = "^2024.1"
pre-commit = "^3.8.0"


[tool.poetry.group.dev.dependencies]
ruff = "^0.6.2"
pyright = "^1.1.378"
isort = "^5.13.2"
black = "^24.8.0"
pytest-cov = "^5.0.0"
flake8 = "^7.1.1"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pyright]
ignore = [
    "alembic/*",
]


[tool.black]
line-length = 79
include = '''
/app/ | /tests/ | /scripts/
'''
exclude = '''
/(
    tests/.pytest_cache|alembic|\.venv|app/__pycache__|tests/__pycache__|\.git/
)/
'''


[tool.isort]
src_paths = [
    "app",
    "tests",
    "scripts"
]
skip = [
    "alembic",
    ".venv",
    "__pycache__",
]
profile = "black"
line_length = 79


[tool.pytest.ini_options]
minversion = "7.0"
addopts = "--cov app"
asyncio_mode = "auto"
pythonpath = [
  "."
]


[tool.coverage.run]
omit = [
    "*__init__.py"
]


[tool.ruff]
exclude = [
    "alembic"
]
extend-ignore = ["E203"]


[tool.ruff.lint]
extend-select = [
    "B",  # Bug Bear
    "F",  # Pyflakes
    "E",  # Pycodestyle
    "D", # Docstrings
    "N",  # pep-8 naming
    "Q",  # flake8-quotes
    "UP",  # Pyupgrade
    "ASYNC",  # flake8-async
    "D415", # ends-in-punctuation
    "TRIO",  # flake8-trio
    "PL",  # Pylint
    "I001",  # isort
    "FBT",  # flake8-boolean-trap
    "B",  # flake8-bugbear
    "LOG", # flake8-logging
    "C90", # mccabe
    "A",  # flake8-builtins
    "COM",  # flake8-commas
    "C4",  # flake8-comprehensions
    "DTZ",  # flake8-datetime
    "D415",  # ends-in-punctuation
    "PIE",  # flake8-pie
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SLOT",  # flake8-slots
    "SIM",  # flake8-simplify
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "TD",  # flake8-todos
    "ERA",  # eradicate
    "PLC",  # pylint Convention
    "PLE",  # pylint Errors
    "PLR",  # pylint Refactor
    "PLW",  # pylint Warning
]

[tool.flake8]
exclude = [
    "alembic/versions/*"
]
ignore = [
    "E501",  # Ignore line length errors
    "W503"   # Ignore line break before binary operator
]
